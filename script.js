/* 
DIRECTIONS  
first: attach event handler to submit event of form
-addContentForm: id of <form> element 
-'submit' event of form, 
- saveIssue: event handle function
*/

/*
    DESCRIPTION: 
    by attaching an event handler to submit button of form, the
    rest of the functions can take place 
    > the reference to the form element is created by 'getElementById'
    > the 'addEventListener' method, attaches the submit event of form to "saveList" event handler function
*/
//document.getElementById('itemInputForm').addEventListener('submit', saveList);
var itemForm = document.getElementById('issueInputForm');

itemForm.addEventListener('submit', saveIssue);
/*
    saveIssue() description
    >input values from form saved in local variables
    itemStatus set to open, itemId generated by change.guid()
    >new item  object inserted into  items object in local storage
    >reset() - empties form

*/
function saveIssue(e) {
    var issueId = chance.guid();
    var issueDesc = document.getElementById('issueDescInput').value;
    var issueSeverity = document.getElementById('issueSeverityInput').value;
    var issueAssignedTo = document.getElementById('issueAssignedToInput').value;
    var issueStatus = 'Open';
    var issue = {
      id: issueId,
      description: issueDesc,
      severity: issueSeverity,
      assignedTo: issueAssignedTo,
      status: issueStatus
    }

  if (localStorage.getItem('issues') === null) {
    var issues = [];
    issues.push(issue);
        //where "item" object is defined above, and items is an empty array containing user form input
        //else: item object gets inserted into items object in local storage
        localStorage.setItem('issues', JSON.stringify(issues));
    } else {
      var issues = JSON.parse(localStorage.getItem('issues'));
      issues.push(issue);
      localStorage.setItem('issues', JSON.stringify(issues));
    }

    //after having inserted the issues objects into local storage, need to empty the form by creating the reset() method
    document.getElementById('issueInputForm').reset();
    //calling getList() again to make sure list output is re-generated and new item is visible
    fetchIssues();
    //need execute e.preventDefault() to prevent the default submission of the form taking place
    e.preventDefault();
}//endFunction saveList

/*
note: setItem() method is a part of Storage Object, which can be a localStorage object or sessionStorage object
*/

function setStatusClosed(id){
    var issues = JSON.parse(localStorage.getItem('issues'));
  
    for(var i = 0; i < issues.length; i++) {
      if (issues[i].id == id) {
        issues[i].status = "Closed";
      }
    }
      
    localStorage.setItem('issues', JSON.stringify(issues));
    
    fetchIssues();
}

function deleteIssue(id) {
    var issues = JSON.parse(localStorage.getItem('issues'));
  
    for(var i = 0; i < issues.length; i++) {
      if (issues[i].id == id) {
            issues.splice(i, 1);
             //removes one element at the specified index
        }
    }
    localStorage.setItem('issues', JSON.stringify(issues));
    fetchIssues();
    //after removing current item, update list output
}


function fetchIssues() {
    var issues = JSON.parse(localStorage.getItem('issues'));
    var issuesList = document.getElementById('issuesList');
    
    issuesList.innerHTML = '';

                            
 for (var i = 0; i < issues.length; i++) {
    var id = issues[i].id;
    var desc = issues[i].description;
    var severity = issues[i].severity;
    var assignedTo = issues[i].assignedTo;
    var status = issues[i].status;


                    
                          
    issuesList.innerHTML +=   '<div class="well">'+
                              '<h6>Issue ID: ' + id + '</h6>'+
                              '<p><span class="label label-info"> <a class = "btn btn-info assigned">Status</a>' + status + '</span></p>'+
                              '<h3>' + desc + '</h3>'+
                              '<p><span class="glyphicon glyphicon-time"></span>  <a class = "btn btn-info assigned">Severity</a> ' + severity + ' '+ '</br>'+
                              '<span class="glyphicon glyphicon-user"></span> <a class = "btn btn-info assigned">Assigned To</a>' + assignedTo + '</p>'+
                              '<a href="#" class="btn btn-warning" onclick="setStatusClosed(\''+id+'\')">Close</a> '+
                              '<a href="#" class="btn btn-danger" onclick="deleteIssue(\''+id+'\')">Delete</a>'+
                              '</div>';
}//end for Loop           
}//endFunction getList()































